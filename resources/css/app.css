/*! tailwindcss v4.0.0 | MIT License | https://tailwindcss.com */
@import "tailwindcss/base";
@import "tailwindcss/components";
@import "tailwindcss/utilities";

.\@container {
    container-type: inline-size;
}
.pointer-events-auto {
    pointer-events: auto;
}
.pointer-events-none {
    pointer-events: none;
}
.collapse {
    visibility: collapse;
}
.invisible {
    visibility: hidden;
}
.visible {
    visibility: visible;
}
.sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
}
.absolute {
    position: absolute;
}
.fixed {
    position: fixed;
}
.relative {
    position: relative;
}
.static {
    position: static;
}
.sticky {
    position: sticky;
}
.-inset-px {
    inset: -1px;
}
.start-full {
    inset-inline-start: 100%;
}
.-top-1\/2 {
    top: calc(calc(1 / 2 * 100%) * -1);
}
.top-1\/2 {
    top: calc(1 / 2 * 100%);
}
.-bottom-1\/2 {
    bottom: calc(calc(1 / 2 * 100%) * -1);
}
.bottom-1\/2 {
    bottom: calc(1 / 2 * 100%);
}
.isolate {
    isolation: isolate;
}
.z-0 {
    z-index: 0;
}
.z-10 {
    z-index: 10;
}
.z-20 {
    z-index: 20;
}
.z-30 {
    z-index: 30;
}
.z-40 {
    z-index: 40;
}
.z-50 {
    z-index: 50;
}
.z-\[1\] {
    z-index: 1;
}
.order-first {
    order: calc(-infinity);
}
.col-\[--col-span-default\] {
    grid-column: --col-span-default;
}
.col-span-full {
    grid-column: 1 / -1;
}
.col-start-2 {
    grid-column-start: 2;
}
.col-start-3 {
    grid-column-start: 3;
}
.col-start-\[--col-start-default\] {
    grid-column-start: --col-start-default;
}
.\!row-span-1 {
    grid-row: span 1 / span 1 !important;
}
.row-start-2 {
    grid-row-start: 2;
}
.container {
    width: 100%;
}
.mx-auto {
    margin-inline: auto;
}
.my-auto {
    margin-block: auto;
}
.ms-auto {
    margin-inline-start: auto;
}
.-mt-px {
    margin-top: -1px;
}
.mt-auto {
    margin-top: auto;
}
.-ml-px {
    margin-left: -1px;
}
.ml-auto {
    margin-left: auto;
}
.line-clamp-\[--line-clamp\] {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: --line-clamp;
}
.\!hidden {
    display: none !important;
}
.block {
    display: block;
}
.contents {
    display: contents;
}
.flex {
    display: flex;
}
.grid {
    display: grid;
}
.hidden {
    display: none;
}
.inline {
    display: inline;
}
.inline-block {
    display: inline-block;
}
.inline-flex {
    display: inline-flex;
}
.inline-grid {
    display: inline-grid;
}
.inline-table {
    display: inline-table;
}
.list-item {
    display: list-item;
}
.table {
    display: table;
}
.table-caption {
    display: table-caption;
}
.table-cell {
    display: table-cell;
}
.table-column {
    display: table-column;
}
.table-column-group {
    display: table-column-group;
}
.table-footer-group {
    display: table-footer-group;
}
.table-header-group {
    display: table-header-group;
}
.table-row {
    display: table-row;
}
.table-row-group {
    display: table-row-group;
}
.aspect-3\/2 {
    aspect-ratio: 3/2;
}
.aspect-4\/5 {
    aspect-ratio: 4/5;
}
.size-full {
    width: 100%;
    height: 100%;
}
.h-\[32\.5rem\] {
    height: 32.5rem;
}
.h-\[35\.5rem\] {
    height: 35.5rem;
}
.h-\[100dvh\] {
    height: 100dvh;
}
.h-dvh {
    height: 100dvh;
}
.h-full {
    height: 100%;
}
.h-screen {
    height: 100vh;
}
.min-h-\[theme\(spacing\.48\)\] {
    min-height: 12rem;
}
.min-h-full {
    min-height: 100%;
}
.min-h-screen {
    min-height: 100vh;
}
.w-1\/2 {
    width: calc(1 / 2 * 100%);
}
.w-3\/4 {
    width: calc(3 / 4 * 100%);
}
.w-\[--sidebar-width\] {
    width: --sidebar-width;
}
.w-\[8rem\] {
    width: 8rem;
}
.w-\[calc\(100\%\+2rem\)\] {
    width: calc(100% + 2rem);
}
.w-\[calc\(100\%\+8rem\)\] {
    width: calc(100% + 8rem);
}
.w-auto {
    width: auto;
}
.w-full {
    width: 100%;
}
.w-max {
    width: max-content;
}
.w-px {
    width: 1px;
}
.w-screen {
    width: 100vw;
}
.\!max-w-\[14rem\] {
    max-width: 14rem !important;
}
.max-w-\[877px\] {
    max-width: 877px;
}
.max-w-fit {
    max-width: fit-content;
}
.max-w-full {
    max-width: 100%;
}
.max-w-max {
    max-width: max-content;
}
.max-w-min {
    max-width: min-content;
}
.max-w-none {
    max-width: none;
}
.min-w-\[theme\(spacing\.4\)\] {
    min-width: 1rem;
}
.min-w-\[theme\(spacing\.5\)\] {
    min-width: 1.25rem;
}
.min-w-\[theme\(spacing\.6\)\] {
    min-width: 1.5rem;
}
.min-w-\[theme\(spacing\.8\)\] {
    min-width: 2rem;
}
.flex-1 {
    flex: 1;
}
.flex-none {
    flex: none;
}
.flex-shrink {
    flex-shrink: 1;
}
.shrink-0 {
    flex-shrink: 0;
}
.flex-grow {
    flex-grow: 1;
}
.grow {
    flex-grow: 1;
}
.table-auto {
    table-layout: auto;
}
.border-collapse {
    border-collapse: collapse;
}
.origin-top {
    transform-origin: top;
}
.origin-top-right {
    transform-origin: top right;
}
.-translate-x-1\/2 {
    --tw-translate-x: calc(calc(1 / 2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
}
.-translate-x-1\/4 {
    --tw-translate-x: calc(calc(1 / 4 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
}
.-translate-x-full {
    --tw-translate-x: -100%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
}
.-translate-y-1\/2 {
    --tw-translate-y: calc(calc(1 / 2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
}
.-translate-y-3\/4 {
    --tw-translate-y: calc(calc(3 / 4 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
}
.translate-x-full {
    --tw-translate-x: 100%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
}
.scale-95 {
    --tw-scale-x: 95%;
    --tw-scale-y: 95%;
    --tw-scale-z: 95%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
}
.scale-100 {
    --tw-scale-x: 100%;
    --tw-scale-y: 100%;
    --tw-scale-z: 100%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
}
.-rotate-180 {
    rotate: calc(180deg * -1);
}
.rotate-180 {
    rotate: 180deg;
}
.\[transform\:translateZ\(0\)\] {
    transform: translateZ(0);
}
.transform {
    transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z)
        var(--tw-skew-x) var(--tw-skew-y);
}
.transform\! {
    transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z)
        var(--tw-skew-x) var(--tw-skew-y) !important;
}
.cursor-default {
    cursor: default;
}
.cursor-move {
    cursor: move;
}
.cursor-not-allowed {
    cursor: not-allowed;
}
.cursor-pointer {
    cursor: pointer;
}
.resize {
    resize: both;
}
.resize-none {
    resize: none;
}
.list-inside {
    list-style-position: inside;
}
.list-disc {
    list-style-type: disc;
}
.columns-\[--cols-default\] {
    columns: --cols-default;
}
.break-inside-avoid {
    break-inside: avoid;
}
.auto-cols-fr {
    grid-auto-columns: minmax(0, 1fr);
}
.grid-flow-col {
    grid-auto-flow: column;
}
.grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
}
.grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
}
.grid-cols-4 {
    grid-template-columns: repeat(4, minmax(0, 1fr));
}
.grid-cols-7 {
    grid-template-columns: repeat(7, minmax(0, 1fr));
}
.grid-cols-\[--cols-default\] {
    grid-template-columns: --cols-default;
}
.grid-cols-\[1fr_auto_1fr\] {
    grid-template-columns: 1fr auto 1fr;
}
.grid-cols-\[repeat\(7\,minmax\(theme\(spacing\.7\)\,1fr\)\)\] {
    grid-template-columns: repeat(7, minmax(1.75rem, 1fr));
}
.grid-cols-\[repeat\(auto-fit\,minmax\(0\,1fr\)\)\] {
    grid-template-columns: repeat(auto-fit, minmax(0, 1fr));
}
.grid-rows-\[1fr_auto_1fr\] {
    grid-template-rows: 1fr auto 1fr;
}
.\!flex-row {
    flex-direction: row !important;
}
.flex-col {
    flex-direction: column;
}
.flex-col-reverse {
    flex-direction: column-reverse;
}
.flex-row-reverse {
    flex-direction: row-reverse;
}
.flex-wrap {
    flex-wrap: wrap;
}
.content-start {
    align-content: flex-start;
}
.items-baseline {
    align-items: baseline;
}
.items-center {
    align-items: center;
}
.items-end {
    align-items: flex-end;
}
.items-start {
    align-items: flex-start;
}
.items-stretch {
    align-items: stretch;
}
.justify-between {
    justify-content: space-between;
}
.justify-center {
    justify-content: center;
}
.justify-end {
    justify-content: flex-end;
}
.justify-start {
    justify-content: flex-start;
}
.justify-items-center {
    justify-items: center;
}
.justify-items-start {
    justify-items: start;
}
.gap-y-px {
    row-gap: 1px;
}
.divide-x {
    :where(& > :not(:last-child)) {
        --tw-divide-x-reverse: 0;
        border-inline-style: var(--tw-border-style);
        border-inline-start-width: calc(1px * var(--tw-divide-x-reverse));
        border-inline-end-width: calc(
            1px * calc(1 - var(--tw-divide-x-reverse))
        );
    }
}
.divide-y {
    :where(& > :not(:last-child)) {
        --tw-divide-y-reverse: 0;
        border-bottom-style: var(--tw-border-style);
        border-top-style: var(--tw-border-style);
        border-top-width: calc(1px * var(--tw-divide-y-reverse));
        border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
    }
}
.self-center {
    align-self: center;
}
.self-end {
    align-self: flex-end;
}
.self-start {
    align-self: flex-start;
}
.self-stretch {
    align-self: stretch;
}
.justify-self-center {
    justify-self: center;
}
.justify-self-end {
    justify-self: flex-end;
}
.justify-self-start {
    justify-self: flex-start;
}
.truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}
.overflow-auto {
    overflow: auto;
}
.overflow-hidden {
    overflow: hidden;
}
.overflow-x-auto {
    overflow-x: auto;
}
.overflow-x-clip {
    overflow-x: clip;
}
.overflow-x-hidden {
    overflow-x: hidden;
}
.overflow-x-scroll {
    overflow-x: scroll;
}
.overflow-y-auto {
    overflow-y: auto;
}
.overflow-y-hidden {
    overflow-y: hidden;
}
.rounded-\[10px\] {
    border-radius: 10px;
}
.rounded-full {
    border-radius: calc(infinity * 1px);
}
.border {
    border-style: var(--tw-border-style);
    border-width: 1px;
}
.border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
}
.border-x-\[0\.5px\] {
    border-inline-style: var(--tw-border-style);
    border-inline-width: 0.5px;
}
.border-y {
    border-block-style: var(--tw-border-style);
    border-block-width: 1px;
}
.border-s {
    border-inline-start-style: var(--tw-border-style);
    border-inline-start-width: 1px;
}
.border-e {
    border-inline-end-style: var(--tw-border-style);
    border-inline-end-width: 1px;
}
.\!border-t-0 {
    border-top-style: var(--tw-border-style) !important;
    border-top-width: 0px !important;
}
.border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
}
.border-r {
    border-right-style: var(--tw-border-style);
    border-right-width: 1px;
}
.border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
}
.border-b-0 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 0px;
}
.border-b-2 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 2px;
}
.border-l {
    border-left-style: var(--tw-border-style);
    border-left-width: 1px;
}
.border-l-2 {
    border-left-style: var(--tw-border-style);
    border-left-width: 2px;
}
.border-l-4 {
    border-left-style: var(--tw-border-style);
    border-left-width: 4px;
}
.\!border-none {
    --tw-border-style: none !important;
    border-style: none !important;
}
.border-none {
    --tw-border-style: none;
    border-style: none;
}
.border-transparent {
    border-color: transparent;
}
.bg-\[\#FF2D20\]\/10 {
    background-color: color-mix(in oklab, #ff2d20 10%, transparent);
}
.bg-transparent {
    background-color: transparent;
}
.bg-gradient-to-b {
    --tw-gradient-position: to bottom in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
}
.\!bg-none {
    background-image: none !important;
}
.from-transparent {
    --tw-gradient-from: transparent;
    --tw-gradient-stops: var(
        --tw-gradient-via-stops,
        var(--tw-gradient-position) var(--tw-gradient-from)
            var(--tw-gradient-from-position),
        var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
}
.bg-cover {
    background-size: cover;
}
.bg-center {
    background-position: center;
}
.fill-current {
    fill: currentColor;
}
.stroke-\[\#FF2D20\] {
    stroke: #ff2d20;
}
.stroke-2 {
    stroke-width: 2;
}
.object-cover {
    object-fit: cover;
}
.object-center {
    object-position: center;
}
.object-top {
    object-position: top;
}
.ps-\[5\.25rem\] {
    padding-inline-start: 5.25rem;
}
.text-center {
    text-align: center;
}
.text-end {
    text-align: end;
}
.text-justify {
    text-align: justify;
}
.text-left {
    text-align: left;
}
.text-right {
    text-align: right;
}
.text-start {
    text-align: start;
}
.align-bottom {
    vertical-align: bottom;
}
.align-middle {
    vertical-align: middle;
}
.align-top {
    vertical-align: top;
}
.text-wrap {
    text-wrap: wrap;
}
.break-words {
    overflow-wrap: break-word;
}
.break-all {
    word-break: break-all;
}
.whitespace-normal {
    white-space: normal;
}
.whitespace-nowrap {
    white-space: nowrap;
}
.capitalize {
    text-transform: capitalize;
}
.lowercase {
    text-transform: lowercase;
}
.uppercase {
    text-transform: uppercase;
}
.italic {
    font-style: italic;
}
.ordinal {
    --tw-ordinal: ordinal;
    font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero)
        var(--tw-numeric-figure) var(--tw-numeric-spacing)
        var(--tw-numeric-fraction);
}
.line-through {
    text-decoration-line: line-through;
}
.overline {
    text-decoration-line: overline;
}
.underline {
    text-decoration-line: underline;
}
.antialiased {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}
.subpixel-antialiased {
    -webkit-font-smoothing: auto;
    -moz-osx-font-smoothing: auto;
}
.opacity-0 {
    opacity: 0%;
}
.opacity-50 {
    opacity: 50%;
}
.opacity-70 {
    opacity: 70%;
}
.opacity-75 {
    opacity: 75%;
}
.opacity-100 {
    opacity: 100%;
}
.ring {
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
        calc(1px + var(--tw-ring-offset-width))
        var(--tw-ring-color, currentColor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
        var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}
.ring-0 {
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
        calc(0px + var(--tw-ring-offset-width))
        var(--tw-ring-color, currentColor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
        var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}
.ring-1 {
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
        calc(1px + var(--tw-ring-offset-width))
        var(--tw-ring-color, currentColor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
        var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}
.ring-2 {
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
        calc(2px + var(--tw-ring-offset-width))
        var(--tw-ring-color, currentColor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
        var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}
.ring-3 {
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
        calc(3px + var(--tw-ring-offset-width))
        var(--tw-ring-color, currentColor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
        var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}
.ring-4 {
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
        calc(4px + var(--tw-ring-offset-width))
        var(--tw-ring-color, currentColor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
        var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}
.shadow-\[0px_14px_34px_0px_rgba\(0\,0\,0\,0\.08\)\] {
    --tw-shadow: 0px 14px 34px 0px var(--tw-shadow-color, rgba(0, 0, 0, 0.08));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
        var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}
.ring-transparent {
    --tw-ring-color: transparent;
}
.ring-offset-1 {
    --tw-ring-offset-width: 1px;
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0
        var(--tw-ring-offset-width) var(--tw-ring-offset-color);
}
.outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
}
.drop-shadow-\[0px_4px_34px_rgba\(0\,0\,0\,0\.06\)\] {
    --tw-drop-shadow: drop-shadow(0px 4px 34px rgba(0, 0, 0, 0.06));
    filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast)
        var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert)
        var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}
.drop-shadow-\[0px_4px_34px_rgba\(0\,0\,0\,0\.25\)\] {
    --tw-drop-shadow: drop-shadow(0px 4px 34px rgba(0, 0, 0, 0.25));
    filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast)
        var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert)
        var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}
.grayscale {
    --tw-grayscale: grayscale(100%);
    filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast)
        var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert)
        var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}
.invert {
    --tw-invert: invert(100%);
    filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast)
        var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert)
        var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}
.sepia {
    --tw-sepia: sepia(100%);
    filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast)
        var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert)
        var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}
.filter {
    filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast)
        var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert)
        var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}
.filter\! {
    filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast)
        var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert)
        var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow) !important;
}
.backdrop-filter {
    -webkit-backdrop-filter: var(--tw-backdrop-blur)
        var(--tw-backdrop-brightness) var(--tw-backdrop-contrast)
        var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate)
        var(--tw-backdrop-invert) var(--tw-backdrop-opacity)
        var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
    backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness)
        var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale)
        var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert)
        var(--tw-backdrop-opacity) var(--tw-backdrop-saturate)
        var(--tw-backdrop-sepia);
}
.transition {
    transition-property: color, background-color, border-color, outline-color,
        text-decoration-color, fill, stroke, --tw-gradient-from,
        --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform,
        translate, scale, rotate, filter, -webkit-backdrop-filter,
        backdrop-filter;
    transition-timing-function: var(--tw-ease, ease);
    transition-duration: var(--tw-duration, 0s);
}
.transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, ease);
    transition-duration: var(--tw-duration, 0s);
}
.transition-colors {
    transition-property: color, background-color, border-color, outline-color,
        text-decoration-color, fill, stroke, --tw-gradient-from,
        --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, ease);
    transition-duration: var(--tw-duration, 0s);
}
.transition-opacity {
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, ease);
    transition-duration: var(--tw-duration, 0s);
}
.delay-100 {
    transition-delay: 100ms;
}
.duration-75 {
    --tw-duration: 75ms;
    transition-duration: 75ms;
}
.duration-100 {
    --tw-duration: 100ms;
    transition-duration: 100ms;
}
.duration-150 {
    --tw-duration: 150ms;
    transition-duration: 150ms;
}
.duration-200 {
    --tw-duration: 200ms;
    transition-duration: 200ms;
}
.duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
}
.duration-500 {
    --tw-duration: 500ms;
    transition-duration: 500ms;
}
.outline-none {
    --tw-outline-style: none;
    outline-style: none;
}
.ring-inset {
    --tw-ring-inset: inset;
}
.select-all {
    -webkit-user-select: all;
    user-select: all;
}
.select-none {
    -webkit-user-select: none;
    user-select: none;
}
.group-hover\/item\:underline {
    &:is(:where(.group\/item):hover *) {
        @media (hover: hover) {
            text-decoration-line: underline;
        }
    }
}
.group-hover\/link\:underline {
    &:is(:where(.group\/link):hover *) {
        @media (hover: hover) {
            text-decoration-line: underline;
        }
    }
}
.group-focus-visible\/item\:underline {
    &:is(:where(.group\/item):focus-visible *) {
        text-decoration-line: underline;
    }
}
.group-focus-visible\/link\:underline {
    &:is(:where(.group\/link):focus-visible *) {
        text-decoration-line: underline;
    }
}
.selection\:bg-\[\#FF2D20\] {
    & *::selection {
        background-color: #ff2d20;
    }
    &::selection {
        background-color: #ff2d20;
    }
}
.before\:absolute {
    &::before {
        content: var(--tw-content);
        position: absolute;
    }
}
.before\:h-full {
    &::before {
        content: var(--tw-content);
        height: 100%;
    }
}
.first\:border-s-0 {
    &:first-child {
        border-inline-start-style: var(--tw-border-style);
        border-inline-start-width: 0px;
    }
}
.first\:border-t-0 {
    &:first-child {
        border-top-style: var(--tw-border-style);
        border-top-width: 0px;
    }
}
.last\:border-e-0 {
    &:last-child {
        border-inline-end-style: var(--tw-border-style);
        border-inline-end-width: 0px;
    }
}
.default\:col-span-full {
    &:default {
        grid-column: 1 / -1;
    }
}
.default\:row-span-1 {
    &:default {
        grid-row: span 1 / span 1;
    }
}
.checked\:ring-0 {
    &:checked {
        --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
            calc(0px + var(--tw-ring-offset-width))
            var(--tw-ring-color, currentColor);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
            var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
            var(--tw-shadow);
    }
}
.hover\:underline {
    &:hover {
        @media (hover: hover) {
            text-decoration-line: underline;
        }
    }
}
.hover\:opacity-100 {
    &:hover {
        @media (hover: hover) {
            opacity: 100%;
        }
    }
}
.focus\:z-10 {
    &:focus {
        z-index: 10;
    }
}
.focus\:ring {
    &:focus {
        --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
            calc(1px + var(--tw-ring-offset-width))
            var(--tw-ring-color, currentColor);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
            var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
            var(--tw-shadow);
    }
}
.focus\:ring-0 {
    &:focus {
        --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
            calc(0px + var(--tw-ring-offset-width))
            var(--tw-ring-color, currentColor);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
            var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
            var(--tw-shadow);
    }
}
.focus\:ring-2 {
    &:focus {
        --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
            calc(2px + var(--tw-ring-offset-width))
            var(--tw-ring-color, currentColor);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
            var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
            var(--tw-shadow);
    }
}
.focus\:ring-offset-0 {
    &:focus {
        --tw-ring-offset-width: 0px;
        --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0
            var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    }
}
.focus\:ring-offset-2 {
    &:focus {
        --tw-ring-offset-width: 2px;
        --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0
            var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    }
}
.focus\:outline-hidden {
    &:focus {
        outline-style: none;
        @media (forced-colors: active) {
            outline: 2px solid transparent;
            outline-offset: 2px;
        }
    }
}
.focus\:outline-none {
    &:focus {
        --tw-outline-style: none;
        outline-style: none;
    }
}
.focus-visible\:z-10 {
    &:focus-visible {
        z-index: 10;
    }
}
.focus-visible\:ring-1 {
    &:focus-visible {
        --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
            calc(1px + var(--tw-ring-offset-width))
            var(--tw-ring-color, currentColor);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
            var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
            var(--tw-shadow);
    }
}
.focus-visible\:ring-2 {
    &:focus-visible {
        --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
            calc(2px + var(--tw-ring-offset-width))
            var(--tw-ring-color, currentColor);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
            var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
            var(--tw-shadow);
    }
}
.focus-visible\:ring-\[\#FF2D20\] {
    &:focus-visible {
        --tw-ring-color: #ff2d20;
    }
}
.focus-visible\:outline-none {
    &:focus-visible {
        --tw-outline-style: none;
        outline-style: none;
    }
}
.focus-visible\:ring-inset {
    &:focus-visible {
        --tw-ring-inset: inset;
    }
}
.enabled\:cursor-wait {
    &:enabled {
        cursor: wait;
    }
}
.enabled\:opacity-70 {
    &:enabled {
        opacity: 70%;
    }
}
.disabled\:pointer-events-none {
    &:disabled {
        pointer-events: none;
    }
}
.disabled\:opacity-25 {
    &:disabled {
        opacity: 25%;
    }
}
.disabled\:opacity-70 {
    &:disabled {
        opacity: 70%;
    }
}
.ltr\:hidden {
    &:where(:dir(ltr), [dir="ltr"], [dir="ltr"] *) {
        display: none;
    }
}
.ltr\:origin-top-left {
    &:where(:dir(ltr), [dir="ltr"], [dir="ltr"] *) {
        transform-origin: top left;
    }
}
.ltr\:origin-top-right {
    &:where(:dir(ltr), [dir="ltr"], [dir="ltr"] *) {
        transform-origin: top right;
    }
}
.rtl\:hidden {
    &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
        display: none;
    }
}
.rtl\:origin-top-left {
    &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
        transform-origin: top left;
    }
}
.rtl\:origin-top-right {
    &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
        transform-origin: top right;
    }
}
.rtl\:-translate-x-full {
    &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
        --tw-translate-x: -100%;
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }
}
.rtl\:translate-x-1\/2 {
    &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
        --tw-translate-x: calc(1 / 2 * 100%);
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }
}
.rtl\:translate-x-1\/4 {
    &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
        --tw-translate-x: calc(1 / 4 * 100%);
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }
}
.rtl\:translate-x-full {
    &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
        --tw-translate-x: 100%;
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }
}
.rtl\:rotate-180 {
    &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
        rotate: 180deg;
    }
}
.rtl\:flex-row-reverse {
    &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
        flex-direction: row-reverse;
    }
}
.rtl\:divide-x-reverse {
    &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
        :where(& > :not(:last-child)) {
            --tw-divide-x-reverse: 1;
        }
    }
}
.dark\:block {
    @media (prefers-color-scheme: dark) {
        display: block;
    }
}
.dark\:flex {
    @media (prefers-color-scheme: dark) {
        display: flex;
    }
}
.dark\:hidden {
    @media (prefers-color-scheme: dark) {
        display: none;
    }
}
.dark\:border {
    @media (prefers-color-scheme: dark) {
        border-style: var(--tw-border-style);
        border-width: 1px;
    }
}
.dark\:bg-transparent {
    @media (prefers-color-scheme: dark) {
        background-color: transparent;
    }
}
.dark\:ring-1 {
    @media (prefers-color-scheme: dark) {
        --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
            calc(1px + var(--tw-ring-offset-width))
            var(--tw-ring-color, currentColor);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
            var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
            var(--tw-shadow);
    }
}
.dark\:focus-visible\:ring-\[\#FF2D20\] {
    @media (prefers-color-scheme: dark) {
        &:focus-visible {
            --tw-ring-color: #ff2d20;
        }
    }
}
.dark\:disabled\:bg-transparent {
    @media (prefers-color-scheme: dark) {
        &:disabled {
            background-color: transparent;
        }
    }
}
.\[\&_\.fi-badge-delete-button\]\:hidden {
    & .fi-badge-delete-button {
        display: none;
    }
}
.\[\&\:\:-ms-reveal\]\:hidden {
    &::-ms-reveal {
        display: none;
    }
}
.\[\&\:not\(\:first-of-type\)\]\:border-s {
    &:not(:first-of-type) {
        border-inline-start-style: var(--tw-border-style);
        border-inline-start-width: 1px;
    }
}
.\[\&\:not\(\:has\(\.fi-ac-action\:focus\)\)\]\:focus-within\:ring-2 {
    &:not(:has(.fi-ac-action:focus)) {
        &:focus-within {
            --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
                calc(2px + var(--tw-ring-offset-width))
                var(--tw-ring-color, currentColor);
            box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
                var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
                var(--tw-shadow);
        }
    }
}
.\[\&\:not\(\:last-of-type\)\]\:border-e {
    &:not(:last-of-type) {
        border-inline-end-style: var(--tw-border-style);
        border-inline-end-width: 1px;
    }
}
.\[\&\:not\(\:nth-last-child\(1_of_\.fi-btn\)\)\]\:me-px {
    &:not(:nth-last-child(1 of .fi-btn)) {
        margin-inline-end: 1px;
    }
}
.\[\&\>\*\:first-child\]\:relative {
    & > *:first-child {
        position: relative;
    }
}
.\[\&\>\*\:first-child\]\:before\:absolute {
    & > *:first-child {
        &::before {
            content: var(--tw-content);
            position: absolute;
        }
    }
}
.\[\@media\(hover\:hover\)\]\:transition {
    @media (hover: hover) {
        transition-property: color, background-color, border-color,
            outline-color, text-decoration-color, fill, stroke,
            --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity,
            box-shadow, transform, translate, scale, rotate, filter,
            -webkit-backdrop-filter, backdrop-filter;
        transition-timing-function: var(--tw-ease, ease);
        transition-duration: var(--tw-duration, 0s);
    }
}
.\[\@media\(hover\:hover\)\]\:duration-75 {
    @media (hover: hover) {
        --tw-duration: 75ms;
        transition-duration: 75ms;
    }
}
.\[input\:checked\+\&\]\:ring-0 {
    input:checked + & {
        --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
            calc(0px + var(--tw-ring-offset-width))
            var(--tw-ring-color, currentColor);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
            var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
            var(--tw-shadow);
    }
}
.\[input\:focus-visible\+\&\]\:z-10 {
    input:focus-visible + & {
        z-index: 10;
    }
}
.\[input\:focus-visible\+\&\]\:ring-2 {
    input:focus-visible + & {
        --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
            calc(2px + var(--tw-ring-offset-width))
            var(--tw-ring-color, currentColor);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
            var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
            var(--tw-shadow);
    }
}
@property --tw-translate-x {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}
@property --tw-translate-y {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}
@property --tw-translate-z {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}
@property --tw-scale-x {
    syntax: "*";
    inherits: false;
    initial-value: 1;
}
@property --tw-scale-y {
    syntax: "*";
    inherits: false;
    initial-value: 1;
}
@property --tw-scale-z {
    syntax: "*";
    inherits: false;
    initial-value: 1;
}
@property --tw-rotate-x {
    syntax: "*";
    inherits: false;
    initial-value: rotateX(0);
}
@property --tw-rotate-y {
    syntax: "*";
    inherits: false;
    initial-value: rotateY(0);
}
@property --tw-rotate-z {
    syntax: "*";
    inherits: false;
    initial-value: rotateZ(0);
}
@property --tw-skew-x {
    syntax: "*";
    inherits: false;
    initial-value: skewX(0);
}
@property --tw-skew-y {
    syntax: "*";
    inherits: false;
    initial-value: skewY(0);
}
@property --tw-divide-x-reverse {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}
@property --tw-border-style {
    syntax: "*";
    inherits: false;
    initial-value: solid;
}
@property --tw-divide-y-reverse {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}
@property --tw-gradient-position {
    syntax: "*";
    inherits: false;
}
@property --tw-gradient-from {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000;
}
@property --tw-gradient-via {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000;
}
@property --tw-gradient-to {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000;
}
@property --tw-gradient-stops {
    syntax: "*";
    inherits: false;
}
@property --tw-gradient-via-stops {
    syntax: "*";
    inherits: false;
}
@property --tw-gradient-from-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 0%;
}
@property --tw-gradient-via-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 50%;
}
@property --tw-gradient-to-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 100%;
}
@property --tw-ordinal {
    syntax: "*";
    inherits: false;
}
@property --tw-slashed-zero {
    syntax: "*";
    inherits: false;
}
@property --tw-numeric-figure {
    syntax: "*";
    inherits: false;
}
@property --tw-numeric-spacing {
    syntax: "*";
    inherits: false;
}
@property --tw-numeric-fraction {
    syntax: "*";
    inherits: false;
}
@property --tw-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
    syntax: "*";
    inherits: false;
}
@property --tw-inset-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
    syntax: "*";
    inherits: false;
}
@property --tw-ring-color {
    syntax: "*";
    inherits: false;
}
@property --tw-ring-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
    syntax: "*";
    inherits: false;
}
@property --tw-inset-ring-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
    syntax: "*";
    inherits: false;
}
@property --tw-ring-offset-width {
    syntax: "<length>";
    inherits: false;
    initial-value: 0px;
}
@property --tw-ring-offset-color {
    syntax: "*";
    inherits: false;
    initial-value: #fff;
}
@property --tw-ring-offset-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
}
@property --tw-outline-style {
    syntax: "*";
    inherits: false;
    initial-value: solid;
}
@property --tw-blur {
    syntax: "*";
    inherits: false;
}
@property --tw-brightness {
    syntax: "*";
    inherits: false;
}
@property --tw-contrast {
    syntax: "*";
    inherits: false;
}
@property --tw-grayscale {
    syntax: "*";
    inherits: false;
}
@property --tw-hue-rotate {
    syntax: "*";
    inherits: false;
}
@property --tw-invert {
    syntax: "*";
    inherits: false;
}
@property --tw-opacity {
    syntax: "*";
    inherits: false;
}
@property --tw-saturate {
    syntax: "*";
    inherits: false;
}
@property --tw-sepia {
    syntax: "*";
    inherits: false;
}
@property --tw-backdrop-blur {
    syntax: "*";
    inherits: false;
}
@property --tw-backdrop-brightness {
    syntax: "*";
    inherits: false;
}
@property --tw-backdrop-contrast {
    syntax: "*";
    inherits: false;
}
@property --tw-backdrop-grayscale {
    syntax: "*";
    inherits: false;
}
@property --tw-backdrop-hue-rotate {
    syntax: "*";
    inherits: false;
}
@property --tw-backdrop-invert {
    syntax: "*";
    inherits: false;
}
@property --tw-backdrop-opacity {
    syntax: "*";
    inherits: false;
}
@property --tw-backdrop-saturate {
    syntax: "*";
    inherits: false;
}
@property --tw-backdrop-sepia {
    syntax: "*";
    inherits: false;
}
@property --tw-duration {
    syntax: "*";
    inherits: false;
}
@property --tw-content {
    syntax: "*";
    initial-value: "";
    inherits: false;
}
